 <ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">
    <Style x:Key="StandartText" TargetType="TextBlock">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="Bahnschrift SemiLight"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <Style x:Key="TitleText" TargetType="TextBlock">
        <Setter Property="FontSize" Value="37"/>
        <Setter Property="FontFamily" Value="Bahnschrift SemiLight"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="HoverText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="Bahnschrift SemiLight"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#007ACC"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedButton}">
        <Setter Property="Background" Value="#007ACC"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="Bahnschrift SemiLight"/>
        <Setter Property="Padding" Value="12,6"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="6"/>
    </Style>


    <Style x:Key="SelectableHoverText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="Bahnschrift SemiLight"/>
        <Setter Property="FontWeight" Value="Normal"/>

        <!-- Триггер при наведении курсора -->
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#007ACC"/>
                <Setter Property="FontWeight" Value="Bold"/>
            </Trigger>

            <!-- Триггер при выборе элемента -->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=IsSelected}" Value="True">
                <Setter Property="Foreground" Value="#007ACC"/>
                <Setter Property="FontWeight" Value="Bold"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Custom Style for Calendar Day Button -->
    <Style x:Key="CustomCalendarDayButton" 
        TargetType="CalendarDayButton" 
        BasedOn="{StaticResource MaterialDesignCalendarDayButton}">
        <Setter Property="materialDesign:CalendarAssist.SelectionColor" Value="#007ACC" />
        <Setter Property="materialDesign:CalendarAssist.SelectionForegroundColor" Value="White" />
        <Setter Property="FontFamily" Value="Bahnschrift SemiLight"/>
    </Style>

    <!-- Custom Style for Calendar Button -->
    <Style x:Key="CustomCalendarButton" 
        TargetType="CalendarButton" 
        BasedOn="{StaticResource MaterialDesignCalendarButton}">
        <Setter Property="materialDesign:CalendarAssist.SelectionColor" Value="#007ACC" />
        <Setter Property="materialDesign:CalendarAssist.SelectionForegroundColor" Value="White" />
    </Style>

    <!-- Custom Style for Calendar -->
    <Style x:Key="CustomCalendar" 
        TargetType="{x:Type Calendar}" 
        BasedOn="{StaticResource MaterialDesignDatePickerCalendarPortrait}">
        <Setter Property="Background" Value="#4A4A4A" />
        <Setter Property="CalendarButtonStyle" Value="{StaticResource CustomCalendarButton}" />
        <Setter Property="CalendarDayButtonStyle" Value="{StaticResource CustomCalendarDayButton}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="materialDesign:CalendarAssist.HeaderBackground" Value="#007ACC" />
        <Setter Property="materialDesign:CalendarAssist.HeaderForeground" Value="White" />
    </Style>

    <!-- Custom Style for Outlined DatePicker -->
    <Style x:Key="CustomOutlinedDatePicker" 
        TargetType="DatePicker" 
        BasedOn="{StaticResource MaterialDesignOutlinedDatePicker}">
        <Setter Property="CalendarStyle" Value="{StaticResource CustomCalendar}" />
        <Setter Property="FontFamily" Value="Cascadia Mono SemiLight"/>
    </Style>
    <!-- Определение цветов -->
    <Color x:Key="ComboBoxForegroundColor">#007ACC</Color>
    <Color x:Key="ComboBoxUnderlineBrushColor">#007ACC</Color>
    <Color x:Key="ComboBoxBackgroundColor">#4A4A4A</Color>
    <Color x:Key="ComboBoxDisabledUnderlineBrushColor">LightGray</Color>

    <!-- Определение кистей -->
    <SolidColorBrush x:Key="ComboBoxForegroundBrush" Color="{StaticResource ComboBoxForegroundColor}" />
    <SolidColorBrush x:Key="ComboBoxUnderlineBrush" Color="{StaticResource ComboBoxUnderlineBrushColor}" />
    <SolidColorBrush x:Key="ComboBoxBackgroundBrush" Color="{StaticResource ComboBoxBackgroundColor}" />
    <SolidColorBrush x:Key="ComboBoxDisabledUnderlineBrush" Color="{StaticResource ComboBoxDisabledUnderlineBrushColor}" />

    <!-- Стиль ComboBox -->
    <Style x:Key="CustomComboBoxStyle" TargetType="ComboBox" BasedOn="{StaticResource MaterialDesignOutlinedComboBox}">
        <Setter Property="Foreground" Value="{StaticResource ComboBoxForegroundBrush}" />
        <Setter Property="Background" Value="{StaticResource ComboBoxBackgroundBrush}" />
        <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="{StaticResource ComboBoxUnderlineBrush}" />

        <!-- Настройка для отключенного состояния -->
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="{StaticResource ComboBoxDisabledUnderlineBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ScrollBarRepeatButtonStyle" TargetType="RepeatButton">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Width" Value="8"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border Background="Gray" CornerRadius="4"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Изменение скрола -->
    <!-- Кнопка со стрелкой вверх -->
    <Style x:Key="RoundedScrollBarStyle" TargetType="ScrollBar">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollBar">
                    <Grid>
                        <Track x:Name="PART_Track"
                           Orientation="{Binding Orientation, RelativeSource={RelativeSource AncestorType=ScrollBar}}"
                           >
                            <Track.DecreaseRepeatButton>
                                <!-- Устанавливаем пустой элемент, чтобы скрыть -->
                                <RepeatButton Visibility="Collapsed" IsHitTestVisible="False" Focusable="False" />
                            </Track.DecreaseRepeatButton>

                            <Track.Thumb>
                                <Thumb Background="DarkGray" Margin="2">
                                    <Thumb.Template>
                                        <ControlTemplate TargetType="Thumb">
                                            <Border Background="{TemplateBinding Background}" CornerRadius="4"/>
                                        </ControlTemplate>
                                    </Thumb.Template>
                                </Thumb>
                            </Track.Thumb>

                            <Track.IncreaseRepeatButton>
                                <!-- Устанавливаем пустой элемент, чтобы скрыть -->
                                <RepeatButton Visibility="Collapsed" IsHitTestVisible="False" Focusable="False" />
                            </Track.IncreaseRepeatButton>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="CustomDataGridColumnHeaderStyle"
       TargetType="DataGridColumnHeader"
       BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <!-- Стиль для DataGrid -->
    <Style x:Key="CustomDataGridStyle" 
           TargetType="DataGrid" 
           BasedOn="{StaticResource MaterialDesignDataGrid}">
        
        <!-- Общие настройки -->
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource CustomDataGridColumnHeaderStyle}" />
        <Setter Property="Background" Value="#4A4A4A"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="FontFamily" Value="Bahnschrift SemiLight"/>
        <Setter Property="RowBackground" Value="#5A5A5A"/>
        <Setter Property="AlternatingRowBackground" Value="#575757"/>
        <Setter Property="SelectedValue" Value="DarkCyan"/>

        <!-- Настройки заголовков -->
        <Setter Property="ColumnHeaderStyle">
            <Setter.Value>
                <Style TargetType="DataGridColumnHeader" 
                       BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Background" Value="#4A4A4A"/>
                    <Setter Property="FontFamily" Value="Bahnschrift SemiLight"/>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomOutlinedTextBox" BasedOn="{StaticResource MaterialDesignOutlinedTextBox}" TargetType="TextBox">
        <Setter Property="Background" Value="#4A4A4A"/>
        <!-- Темно-серый фон -->
        <Setter Property="Foreground" Value="White"/>
        <!-- Белый текст -->
        <Setter Property="BorderBrush" Value="LightGray"/>
        <!-- Светло-серая рамка -->
        <Setter Property="materialDesign:HintAssist.Foreground" Value="LightGray"/>
        <!-- Светло-серый хинт -->
        <Setter Property="materialDesign:HintAssist.Background" Value="#4A4A4A"/>
        <!-- Убираем белые углы -->
        <Setter Property="FontSize" Value="16"/>

        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="White"/>
                <!-- Граница становится белой при фокусе -->
                <Setter Property="materialDesign:HintAssist.Foreground" Value="White"/>
                <!-- Хинт тоже белый при фокусе -->
                <Setter Property="materialDesign:HintAssist.Background" Value="#4A4A4A"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CustomOutlinedPasswordBox" BasedOn="{StaticResource MaterialDesignOutlinedPasswordBox}" TargetType="PasswordBox">
        <Setter Property="Background" Value="#4A4A4A"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="materialDesign:HintAssist.Foreground" Value="LightGray"/>
        <Setter Property="materialDesign:HintAssist.Background" Value="#4A4A4A" />
        <Setter Property="FontSize" Value="16"/>

        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="White"/>
                <Setter Property="materialDesign:HintAssist.Foreground" Value="#4A4A4A"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CustomUnderlinedTextBox" BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}" TargetType="TextBox">
        <Setter Property="Background" Value="#4A4A4A"/>
        <!-- Темно-серый фон -->
        <Setter Property="Foreground" Value="White"/>
        <!-- Белый текст -->
        <Setter Property="BorderBrush" Value="LightGray"/>
        <!-- Светло-серая линия -->
        <Setter Property="materialDesign:HintAssist.Foreground" Value="LightGray"/>
        <!-- Светло-серый хинт -->
        <Setter Property="materialDesign:HintAssist.Background" Value="Transparent"/>
        <!-- Убираем белые углы -->
        <Setter Property="FontSize" Value="16"/>

        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="White"/>
                <!-- Подчёркивание становится белым при фокусе -->
                <Setter Property="materialDesign:HintAssist.Foreground" Value="White"/>
                <!-- Хинт тоже белый при фокусе -->
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CustomUnderlinedPasswordBox" BasedOn="{StaticResource MaterialDesignFloatingHintPasswordBox}" TargetType="PasswordBox">
        <Setter Property="Background" Value="#4A4A4A"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="materialDesign:HintAssist.Foreground" Value="LightGray"/>
        <Setter Property="materialDesign:HintAssist.Background" Value="Transparent" />
        <Setter Property="FontSize" Value="16"/>

        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="White"/>
                <Setter Property="materialDesign:HintAssist.Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- Custom Combined Underlined DatePicker Style -->
    <Style x:Key="CustomCombinedUnderlinedDatePicker" 
       TargetType="DatePicker" 
       BasedOn="{StaticResource MaterialDesignFloatingHintDatePicker}">

        <!-- Common Properties -->
        <Setter Property="Background" Value="#4A4A4A"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="materialDesign:HintAssist.Foreground" Value="LightGray"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="Cascadia Mono SemiLight"/>

        <!-- Calendar Style -->
        <Setter Property="CalendarStyle" Value="{StaticResource CustomCalendar}" />

        <!-- Triggers -->
        <Style.Triggers>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="BorderBrush" Value="White"/>
                <Setter Property="materialDesign:HintAssist.Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>
     
    <Style TargetType="ComboBoxItem" x:Key="DarkComboBoxItemStyle">
        <Setter Property="Background" Value="#4A4A4A"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border x:Name="Bd" Background="{TemplateBinding Background}">
                        <ContentPresenter
                    Margin="{TemplateBinding Padding}"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Left"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="#575757"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CustomUnderlinedComboBox"
       BasedOn="{StaticResource MaterialDesignFloatingHintComboBox}"
       TargetType="ComboBox">
        <Setter Property="Background" Value="#4A4A4A"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="materialDesign:HintAssist.Foreground" Value="LightGray"/>
        <Setter Property="materialDesign:HintAssist.Background" Value="#4A4A4A"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource DarkComboBoxItemStyle}"/>

        <Style.Triggers>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="BorderBrush" Value="White"/>
                <Setter Property="materialDesign:HintAssist.Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CustomCheckBoxStyle" TargetType="CheckBox">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontFamily" Value="Bahnschrift SemiLight"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <!-- Основной контейнер -->
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <!-- Элемент галочки -->
                        <Border x:Name="border" 
                            Grid.Column="0"
                            Background="Transparent"
                            BorderBrush="White"
                            BorderThickness="2"
                            Width="20" 
                            Height="20"
                            CornerRadius="4"
                            Margin="0,0,5,0">

                            <TextBlock x:Name="checkMark"
                                   Text="✓"
                                   Foreground="Transparent"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   FontSize="16"/>
                        </Border>

                        <!-- Текст -->
                        <ContentPresenter Grid.Column="1"
                                      Content="{TemplateBinding Content}"
                                      VerticalAlignment="Center"
                                      Margin="5,0,0,0"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!-- Активное состояние (галочка) -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#2196F3"/>
                            <Setter TargetName="checkMark" Property="Foreground" Value="White"/>
                        </Trigger>

                        <!-- Неактивное состояние -->
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="border" Property="BorderBrush" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>